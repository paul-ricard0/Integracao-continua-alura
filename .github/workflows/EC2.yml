
/*
Curso Integração Contínua Pipeline de entrega e implementação contínua na EC2
Devido o uso de AWS não utilizei script apenas assiti os vídeos e escrevi o que foi feito 
*/

/* Explicando comandos linux (https://caelum-online-public.s3.amazonaws.com/2697-ci-cd/05/aula5-img1.png)
# Passando permissões de escritas para o arquivo main
chmod +x main 

# nohup mantem o comando executando 
# > onde vai ficar o output dessa aplicação
# 2> onde vai ficar os logs de erro
# < quando solicitar uma entrada e não tiver vai recever null
# & indica que é para aplicação ficar executando em segundo plano 
nohup ./main > nohup.out 2> nohup.err < /dev/null &
*/


# SCRIPT DO PROFESSOR
###################################################################################################
name: Entrega continua

on:
  workflow_call:
# jobs:

#   EC2:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Download a Build Artifact
#       uses: actions/download-artifact@v3.0.0
#       with:
#     # Artifact name
#         name: programa
#     - uses: actions/checkout@v3
    
#     - name: Deploy to Staging server
#       uses: easingthemes/ssh-deploy@main
#       env:
#         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#         REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
#         REMOTE_USER: ${{ secrets.REMOTE_USER }}
#         TARGET: /home/${{ secrets.REMOTE_USER }}
#         EXCLUDE: "postgres-data"
        
#     - name: executing remote ssh commands using password
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.REMOTE_HOST }}
#         username: ${{ secrets.REMOTE_USER }}
#         key: ${{ secrets.SSH_PRIVATE_KEY }}
#         port: 22
#         script: |
#           export HOST=${{ secrets.DBHOST }}
#           export USER=${{ secrets.DBUSER }}
#           export PASSWORD=${{ secrets.DBPASSWORD }}
#           export DBNAME=${{ secrets.DBNAME }}
#           export DBPORT=${{ secrets.DBPORT }}
#           export PORT=8000
#           chmod +x main
#           nohup ./main > nohup.out 2> nohup.err < /dev/null &
